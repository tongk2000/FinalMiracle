<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #7. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #8. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->              
<mapper namespace="board_psw">

	<!-- faqList 보여주기 -->
	<select id="faqList" resultType="com.miracle.psw.model.FaqBoardVO">
		select idx, subject, content, readCnt, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate, status
		from tbl_faq
		where status = 1
		order by idx desc
	</select>
	
	<!-- 검색한 faqList 보여주기(페이징 처리 한 것) -->
	<select id="faqListWithSearch" parameterType="HashMap" resultType="com.miracle.psw.model.FaqBoardVO">
		select idx, category, subject, content, regDate
		from
		( select rownum as rno, v.idx, v.category, v.subject, v.content, v.regDate
		  from
		  ( select idx, category, subject, content ,to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		    from tbl_faq
		    where status = 1
		 	and ${colname} like '%'|| #{search} || '%'
		    order by idx desc 
		  )V
		)T
		where T.rno >= #{startRno} and T.rno <![CDATA[<=]]> #{endRno}
	</select>
	<select id="faqListWithNoSearch" parameterType="HashMap" resultType="com.miracle.psw.model.FaqBoardVO">
		select idx, category, subject, content, regDate
		from
		( select rownum as rno, v.idx, v.category, v.subject, v.content, v.regDate
		  from
		  ( select idx, category, subject, content, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		    from tbl_faq
		    where status = 1
		    order by idx desc 
		  )V
		)T
		where T.rno >= #{startRno} and T.rno <![CDATA[<=]]> #{endRno}
	</select>
	
	<!-- 검색 유무에 따른 페이지바 만들기 -->
	<select id="getTotalCountWithSearch" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_faq
		where status = 1
		and ${colname} like '%'|| #{search} ||'%'
	</select>
	<select id="getTotalCountWithNoSearch" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_faq
		where status = 1
	</select>
	
	
	
	<!-- FAQ 게시판 글쓰기 -->
	<insert id="add" parameterType="com.miracle.psw.model.FaqBoardVO">
		insert into tbl_faq(idx, category, subject, content, readCnt, regDate, status)
		values(seq_faq.nextval, #{category}, #{subject}, #{content}, default, default, default)
	</insert>
	
	
	<!-- ============================================================= *** 자유게시판 *** ========================================================== -->	
	<!-- FreeList 보여주기 -->
	<select id="freeList" resultType="com.miracle.psw.model.FreeBoardVO">
		select idx, userid, name, subject, content, readCnt, commentCnt
		 	 , to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		 	 , status, infoStatus
		from tbl_free
		where status = 1
		order by idx desc
	</select>
	
	<!-- 자유게시판 글쓰기 -->
	<insert id="freeAdd" parameterType="com.miracle.psw.model.FreeBoardVO">

		<if test='fk_idx.equals("")'>
			insert into tbl_free(idx, userid, name, subject, content, readCnt, commentCnt, groupno, depthno, regDate, status, infoStatus, fk_teamwon_idx)
			values(seq_free.nextval, #{userid}, #{name}, #{subject}, #{content}, default, default, #{groupno}, default, default, default, default, #{fk_teamwon_idx})  
		</if>
		<if test='!fk_idx.equals("")'>
			insert into tbl_free(idx, userid, name, subject, content, readCnt, commentCnt, groupno, fk_idx, depthno, regDate, status, infoStatus, fk_teamwon_idx)
			values(seq_free.nextval, #{userid}, #{name}, #{subject}, #{content}, default, default, #{groupno}, #{fk_idx}, #{depthno}+1, default, default, default, #{fk_teamwon_idx})  
		</if>
		
	</insert>
	
	<!-- groupno Max값 구하기 -->
	<select id="getGroupMaxno" resultType="int">
		select max(groupno) from tbl_free
	</select>
	
	<!-- 자유게시판 글 1개 보여주기 (조건에 따른 글 조회수 1 증가 후) -->
	<select id="getView" parameterType="String" resultType="com.miracle.psw.model.FreeBoardVO">
		select v.idx, v.userid, v.name, v.subject, v.content, v.readCnt, v.commentCnt
	          ,v.regDate, v.status, v.infoStatus, v.img
	          ,v.groupno, v.fk_idx, v.depthno
	          ,next_idx, pre_idx
		from
		(
		  select F.idx, F.userid, F.name, F.subject, F.content, F.readCnt, F.commentCnt
	           , to_char(F.regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
	           , F.status, F.infoStatus, M.img
	           , F.groupno, F.fk_idx, F.depthno
	           , lead(F.idx, 1, 0) over(order by F.idx) next_idx
	           , lag(F.idx, 1, -9) over(order by F.idx) pre_idx
		  from tbl_free F join tbl_member M
		  on F.userid = M.userid
		  where F.status = 1
		  order by idx desc
		)  v
		where v.idx = #{idx}
	</select>
	<update id="setAddReadCnt" parameterType="String">
		update tbl_free set readCnt = readCnt + 1
		where status = 1
		and idx = #{idx}
	</update>
	
	
	
	<!-- 검색이 있는 freeList 보여주기(페이징 처리 한 것) -->
	<select id="freeListWithSearch" parameterType="HashMap" resultType="com.miracle.psw.model.FreeBoardVO">
		select idx, userid, name, subject, content, readCnt, commentCnt
		     , groupno, fk_idx, depthno
		     , regDate, status, infoStatus, fk_teamwon_idx
		from
		( select rownum as rno, v.idx, v.userid, v.name, v.subject, v.content, v.readCnt, v.commentCnt
		       , v.groupno, v.fk_idx, v.depthno
		       , v.regDate, v.status, v.infoStatus, v.fk_teamwon_idx
		  from
		  ( select F.idx, F.userid, F.name, F.subject, F.content, F.readCnt, F.commentCnt
		  		 , F.groupno, F.fk_idx, F.depthno
		         , to_char(F.regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		         , F.status, F.infoStatus, F.fk_teamwon_idx
		    from tbl_free F join tbl_teamwon T
		    on F.fk_teamwon_idx = T.idx
		    where F.status = 1
		    and T.fk_team_idx = #{fk_team_idx}
		    and ${colname} like '%'|| #{search} ||'%'
		    start with F.fk_idx = 0
		    connect by prior F.idx = F.fk_idx
		    order siblings by F.groupno desc, F.idx asc
		  )V
		)T
		where T.rno >= #{startRno} and T.rno <![CDATA[<=]]> #{endRno}		
	</select>
	<!-- 검색이 없는 freeList 보여주기(페이징 처리 한 것) -->
	<select id="freeListWithNoSearch" parameterType="HashMap" resultType="com.miracle.psw.model.FreeBoardVO">
		select idx, userid, name, subject, content, readCnt, commentCnt
		     , groupno, fk_idx, depthno
		     , regDate, status, infoStatus, fk_teamwon_idx
		from
		( select rownum as rno, v.idx, v.userid, v.name, v.subject, v.content, v.readCnt, v.commentCnt
		       , v.groupno, v.fk_idx, v.depthno
		       , v.regDate, v.status, v.infoStatus, v.fk_teamwon_idx
		  from
		  ( select F.idx, F.userid, F.name, F.subject, F.content, F.readCnt, F.commentCnt, F.groupno, F.fk_idx, F.depthno
		         , to_char(F.regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		         , F.status, F.infoStatus, F.fk_teamwon_idx
		    from tbl_free F join tbl_teamwon T
		    on F.fk_teamwon_idx = T.idx
		    where F.status = 1
		    and T.fk_team_idx = #{fk_team_idx}
		    start with F.fk_idx = 0
		    connect by prior F.idx = F.fk_idx
		    order siblings by F.groupno desc, F.idx asc 
		  )V
		)T
		where T.rno >= #{startRno} and T.rno <![CDATA[<=]]> #{endRno}
	</select>
	
	<!-- 검색 유무에 따른 페이지바 만들기 -->
	<select id="getFreeTotalCountWithSearch" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_free F join tbl_teamwon T
		on F.fk_teamwon_idx = T.idx
		where F.status = 1
		and T.fk_team_idx = #{fk_team_idx}
		and ${colname} like '%'|| #{search} ||'%'
	</select>
	<select id="getFreeTotalCountWithNoSearch" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_free F join tbl_teamwon T
		on F.fk_teamwon_idx = T.idx
		where F.status = 1
		and T.fk_team_idx = #{fk_team_idx}
	</select>
	
	<!-- 자유게시판 글 1개 수정하기 -->
	<update id="freeEdit" parameterType="HashMap">
		update tbl_free set subject = #{subject}, content = #{content}
		where idx = #{idx}
	</update>
	
	<!-- 자유게시판 1개 게시글에 댓글 작성하기(Transaction) -->
	<insert id="addComment" parameterType="com.miracle.psw.model.FreeCommentVO">
		insert into tbl_freeComment(idx, userid, content, regDate, parentIdx, groupno, depthno, orderno, status)
		values(seq_freeComment.nextval, #{userid}, #{content}, default, #{parentIdx}, (select max(groupno)+1 from tbl_free), default, default, default)
	</insert>
	<update id="updateCommentCnt" parameterType="int">
		update tbl_free set commentCnt = commentCnt + 1
		where idx = #{parentIdx}
	</update>
	
	<!-- 자유게시판 1개 게시글에 작성된 댓글 목록 보여주기 -->
	<select id="freeListComment" parameterType="String" resultType="com.miracle.psw.model.FreeCommentVO">
		select C.idx, C.userid, C.content, C.regDate, C.parentIdx, C.status, M.name, M.img
		from tbl_freeComment C join tbl_member M
		on C.userid = M.userid
		where C.status = 1 
		and C.parentIdx = #{idx}
		order by C.idx asc
	</select>
	
	<!-- 자유게시판 1개 게시글에 작성된 댓글중 자신의 댓글 삭제하기 -->
	<update id="delComment" parameterType="String">
		update tbl_freeComment set status = 0
		where idx = #{commentIdx}
	</update>
	
	<!-- 자유게시판 목록에서 선택한 유저정보 보여주기 -->
	<select id="showUserInfo" parameterType="HashMap" resultType="com.miracle.psw.model.MemberVO">
		select idx, userid, name, img
		from tbl_member
		where userid = #{userInfo}
	</select>
	<select id="showUserDetailInfo" parameterType="HashMap" resultType="com.miracle.psw.model.MemberDetailVO">
		select D.hp1, D.hp2, D.hp3
			  ,D.birth1, D.birth2, D.birth3
			  ,D.email
	          ,D.addr1, D.addr2
	          ,D.profile
		from tbl_member M join tbl_member_detail D
		on M.idx = D.fk_member_idx
		where M.userid = #{userInfo}
	</select>
	
	<!-- ========================== *** 자유게시판 1개 게시글 삭제하기 *** ============================= -->
	<select id="isExistComment" parameterType="String" resultType="int">
		select count(*)
		from tbl_freeComment
		where parentIdx = #{idx}
	</select>
	<update id="deleteContent">
		update tbl_free set status = 0
		where idx = #{idx}
	</update>
	<update id="deleteComment">
		update tbl_freeComment set status = 0
		where parentIdx = #{idx}
	</update>
	
	
</mapper>







