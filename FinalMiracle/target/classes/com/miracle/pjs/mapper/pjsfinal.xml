<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #7. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #8. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->              
<mapper namespace="pjsfinal">
<!-- 공지사항 게시판 -->
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 공지사항 게시판 리스트 전체를 불러온다. *** === --><!-- 바뀜 -->
	<!-- === *** 공지사항 게시판에서 검색한 리스트를 불러온다. *** === -->
	<select id="getNoticeList" parameterType="HashMap" resultMap="noticeMap">
			select t.*
			from
			(
			  select rownum as rno, v.*
			  from
			  (
			    select n.idx as n_idx,n.fk_userid, n.subject, to_char(n.regday, 'yyyy-mm-dd hh24:mi:ss') as regday, n.readcount
			          , n.depth, n.status, m.img, t.idx as t_idx, n.groupno
			    from tbl_notice n join tbl_member m        on n.fk_userid = m.userid
			                      join tbl_teamwon w       on m.idx = w.fk_member_idx
			                      join tbl_team t          on w.fk_team_idx = t.idx
			    where n.status = 1 and m.status = 1
			    <if test='searchType!=null and searchString!=null and !"".equals(searchType) and !"".equals(searchString)'>
					  and ${searchType} like '%'||#{searchString}||'%'
				</if>
				and t.idx = #{teamNum}
			    order by n.groupno desc, n.idx asc
			  )v
			)t
			where rno between #{sNum} and #{eNum}
	</select>
	
	<resultMap id="noticeMap" type="HashMap">
		<result property="n_idx" 			column="n_idx" 			javaType="String"></result>
 		<result property="fk_userid" 		column="fk_userid" 		javaType="String"></result>
 		<result property="subject" 			column="subject" 		javaType="String"></result>
 		<result property="regday" 			column="regday" 		javaType="String"></result>
 		<result property="readcount" 		column="readcount" 		javaType="String"></result>
 		<result property="depth" 			column="depth" 			javaType="String"></result>
 		<result property="status" 			column="status" 		javaType="String"></result>
 		<result property="img" 				column="img" 			javaType="String"></result>
 		<result property="t_idx" 			column="t_idx" 			javaType="String"></result>
 		<result property="groupno" 			column="groupno" 		javaType="String"></result>
 	</resultMap>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 총 행의 수를 불러온다. *** === -->
	<select id="getNoticeCount" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_notice n join tbl_member m        on n.fk_userid = m.userid
		                  join tbl_teamwon w       on m.idx = w.fk_member_idx
		                  join tbl_team t          on w.fk_team_idx = t.idx
		where w.fk_team_idx = #{teamNum} and n.status = 1
		<if test='searchType!=null and searchString!=null and !"".equals(searchType) and !"".equals(searchString)'>
			and ${searchType} like '%'||#{searchString}||'%'
		</if>
		<!-- <if test='teamNum==null||"".equals(teamNum)'>
			and t.idx in 
			<foreach collection="tn" item="teamNum" open="(" close=")" separator=",">
				 #{teamNum}
			</foreach>
		</if>
		<if test='teamNum!=null||!"".equals(teamNum)'>
			and t.idx = #{teamNum}
		</if>	 -->
	</select>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** JSON 검색한 리스트를 불러온다. *** === -->
	<select id="getNoticeJSONList" parameterType="HashMap" resultType="String">
		<if test='"fk_userid".equals(searchType) and !"".equals(searchString)'>
			select fk_userid
			from tbl_notice n join tbl_member m        on n.fk_userid = m.userid
		                      join tbl_teamwon w       on m.idx = w.fk_member_idx
		                      join tbl_team t          on w.fk_team_idx = t.idx
			where ${searchType} like '%'||#{searchString}||'%' and n.status = 1 and m.status = 1 and t.idx = #{t_idx}
		</if>
		<if test='"subject".equals(searchType) and !"".equals(searchString)'>
			select subject
			from tbl_notice n join tbl_member m        on n.fk_userid = m.userid
		                      join tbl_teamwon w       on m.idx = w.fk_member_idx
		                      join tbl_team t          on w.fk_team_idx = t.idx
			where ${searchType} like '%'||#{searchString}||'%' and n.status = 1 and m.status = 1 and t.idx = #{t_idx}
		</if>
	</select>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 이모티콘을 누르면 해당 유저의 정보 불러온다. *** === -->
	<select id="getViewContent" parameterType="String" resultMap="userinfo">
		select *
		from
		(
		    select userid, name, img, birth1||'년도 '||birth2||'월생' as age, hp1||'-'||hp2||'-'||hp3 as hp, addr1||' '||addr2 as addr
		    from tbl_member m join tbl_member_detail d on m.idx = d.fk_member_idx
			where m.userid = #{id}
		) v
	</select>
	<resultMap id="userinfo" type="HashMap">
 		<result property="userid" 				column="userid" 			javaType="String"></result>
 		<result property="name" 				column="name" 				javaType="String"></result>
 		<result property="img"		 			column="img" 				javaType="String"></result>
 		<result property="age" 					column="age" 				javaType="String"></result>
 		<result property="hp" 					column="hp" 				javaType="String"></result>
 		<result property="addr" 				column="addr" 				javaType="String"></result>
 	</resultMap>
 <!-- ============================================================================================================================================================= -->	
 	<!-- === *** 게시판의 idx로 해당 글의 정보를 보여주는 뷰단으로 정보전달하기 *** === -->
	<select id="getIdxTeam" parameterType="HashMap" resultMap="idxTeam">
		select W.Fk_Team_Idx as team_idx, m.userid as userid, m.img, n.subject, n.content ,w.status, n.idx as n_idx
		from tbl_notice n join tbl_member m on n.fk_userid = M.Userid 
                              left join tbl_teamwon w on w.fk_member_idx = M.Idx
		where n.idx = #{nidx} and w.fk_team_idx = #{teamidx}
	</select>
	<resultMap id="idxTeam" type="HashMap">
 		<result property="team_idx" 			column="team_idx"		javaType="String"></result>
 		<result property="userid" 				column="userid" 		javaType="String"></result>
 		<result property="img" 					column="img" 			javaType="String"></result>
 		<result property="subject" 				column="subject" 		javaType="String"></result>
 		<result property="content" 				column="content" 		javaType="String"></result>
 		<result property="status" 				column="status" 		javaType="String"></result>
 		<result property="n_idx" 				column="n_idx"			javaType="String"></result>
 	</resultMap>
<!-- ============================================================================================================================================================= -->	
	<!-- 파일 가져오기 -->
	<select id="getfilename" parameterType="String" resultType="com.miracle.pjs.model.NoticeFileVO">
		    select *
    		from tbl_notice n join tbl_noticefile f on n.idx = f.fk_idx
    		where n.idx = #{nidx}
	</select>
<!-- ============================================================================================================================================================= -->	
	<!-- <update id="delNoticeIdx" parameterType="String">
        <if test="idxArr != null">
            update tbl_notice set status = 0
        	where groupno = (select groupno from tbl_notice where idx in
        	<foreach collection="idxArr" index="i" open="(" separator="," close=")" >
        		${idxArr}
        	</foreach>
        	) and ref_idx >= (select ref_idx from tbl_notice where idx in
        	<foreach collection="idxArr" index="i" open="(" separator="," close=")" >
        		${idxArr}
        	</foreach>
        	)
        </if>
	</update> -->
	<update id="delNoticeIdx" parameterType="java.lang.String">
            update tbl_notice set status = 0
        	where groupno = ( select groupno from tbl_notice where idx = #{idx} ) 
        	and ref_idx >= ( select ref_idx from tbl_notice where idx = #{idx} )
	</update>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 리플 글 가져오기 *** === -->
	<select id="getComment" parameterType="HashMap" resultType="com.miracle.pjs.model.ReplyVO">
    	select *
		from 
		(
		  select rownum as rno, v.*       
		  from 
		  (
		       select p.reply_content, p.regday, p.sesid, m.img
		       from tbl_noticereply p join tbl_notice n on p.fk_idx = n.idx
		                                              join tbl_member m on m.userid = p.sesid
		       where n.idx = #{idx}
		  ) v
		)  t
		where rno between #{sNum} and #{eNum}
	</select>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 리플글 총 수 *** === -->
	<select id="getReplyCount" parameterType="HashMap" resultType="int">
       select count(*)
       from tbl_noticereply p join tbl_notice n on p.fk_idx = n.idx
                              join tbl_member m on m.userid = p.sesid
       where n.idx = #{idx}
	</select>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 리플글 입력하기 *** === -->
	<insert id="setComment" parameterType="HashMap">
		insert into tbl_noticereply
		values(seq_noticereply.nextval,#{idx}, #{comment}, default, default, seq_noticereply.nextval, default, #{userid})
	</insert>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 조회수 늘리기 *** === -->
	<update id="updateReadCount" parameterType="String">
		update tbl_notice set readCount = readCount + 1
		where idx = #{nidx}
	</update>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 글쓰기 *** === -->
	<insert id="setNoticeWrite" parameterType="HashMap">
		insert into tbl_notice
		values(seq_notice.nextval,#{userid},#{subject}, sysdate, default, default , seq_notice.nextval , default, default ,#{content})
        <!--        idx          fk_userid, subject, content, regday, readcount, depth, groupno, ref_idx, status -->
	</insert>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 수정글쓰기 *** === -->
	<insert id="setNoticeEditWrite" parameterType="HashMap">
		insert into tbl_notice 
		values(seq_notice.nextval,#{userid},#{subject}, sysdate, default, #{depth} , #{groupno}, #{nidx}, default ,#{content})
        <!--         idx          fk_userid, subject, content, regday, readcount, depth, groupno, ref_idx, status -->
	</insert>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 수정글depth가져오기 *** === -->
	<select id="getDepth" parameterType="String" resultMap="depth">
		select depth, groupno
		from tbl_notice
		where idx = #{parameter}
	</select>
	<resultMap id="depth" type="HashMap">
 		<result property="depth" 			column="depth"		javaType="String"></result>
 		<result property="groupno" 			column="groupno" 	javaType="String"></result>
 	</resultMap>
<!-- ============================================================================================================================================================= -->	
	<!-- === ***  *** === -->
	<select id="getCountReply" parameterType="HashMap" resultType="int">
		select count(*)   
		from  tbl_notice n join tbl_noticereply y on n.idx = y.fk_idx
		where n.idx = #{idx}
	</select>
<!-- ============================================================================================================================================================= -->	
<!-- === ***  *** === -->
	<!-- <select id="" parameterType="HashMap" resultMap="editView">
		select n.idx
		from tbl_notice n join tbl_member m on n.fk_idx = m.userid
		where n.idx = #{nidx} 
	</select>
	<resultMap id="editView" type="HashMap">
 		<result property="idx" 				column="idx"		javaType="String"></result>
 		<result property="subject" 			column="subject" 	javaType="String"></result>
 		<result property="content" 			column="content" 	javaType="String"></result>
 		<result property="userid" 			column="userid" 	javaType="String"></result>
 	</resultMap> -->
<!-- ============================================================================================================================================================= -->	
	
	
	
	
	
	

<!-- 마음의 소리 게시판 -->
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 마음의 소리 게시판의 전체 리스트를 불러온다. *** === -->
	<select id="getMindList" resultMap="mindMap">
		select *
		from
		(
		  select rownum as rno, v.*
		  from
		  (
		      select d.idx as d_idx,d.fk_userid, d.subject, to_char(d.regday, 'yyyy-mm-dd hh24:mi:ss') as regday, d.readcount
			          , d.depth, d.status, m.img, t.idx as t_idx, d.groupno, w.status as tstatus, d.checkNum
		      from tbl_mind d   join tbl_member m        on d.fk_userid = m.userid
			                    join tbl_teamwon w       on m.idx = w.fk_member_idx
			                    join tbl_team t          on w.fk_team_idx = t.idx
		      where 1=1 and d.status = 1 and m.status =1
		      <if test='!"2".equals(status)'>
				and m.userid in ('kdh',#{userid}) and chkid = #{userid} 
			  </if>
		      <if test='searchType!=null and searchString!=null and !"".equals(searchType) and !"".equals(searchString)'>
				 and ${searchType} like '%'||#{searchString}||'%'
			  </if>
			  and t.idx = #{teamNum}			  
			  order by d.groupno desc, d.idx asc
		  )  v
		) t
		where rno between #{sNum} and #{eNum}
	</select>
	
	<resultMap id="mindMap" type="HashMap">
 		<result property="d_idx" 			column="d_idx" 			javaType="String"></result>
 		<result property="fk_userid" 		column="fk_userid" 		javaType="String"></result>
 		<result property="subject" 			column="subject" 		javaType="String"></result>
 		<result property="regday" 			column="regday" 		javaType="String"></result>
 		<result property="readcount" 		column="readcount" 		javaType="String"></result>
 		<result property="depth" 			column="depth" 			javaType="String"></result>
 		<result property="status" 			column="status" 		javaType="String"></result>
 		<result property="img" 				column="img" 			javaType="String"></result>
 		<result property="t_idx" 			column="t_idx" 			javaType="String"></result>
 		<result property="groupno" 			column="groupno" 		javaType="String"></result>
 		<result property="tstatus" 			column="tstatus" 		javaType="String"></result>
 		<result property="checkNum" 		column="checkNum" 		javaType="String"></result>
 	</resultMap>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 마음의 소리 게시판의 검색된 행의 수를 불러온다. *** === -->
	<select id="getMindCount" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_mind d   join tbl_member m        on d.fk_userid = m.userid
			              join tbl_teamwon w       on m.idx = w.fk_member_idx
			              join tbl_team t          on w.fk_team_idx = t.idx
		where 1=1 and d.status = 1 and m.status =1
		<if test='!"2".equals(status)'>
				and m.userid = #{userid}
		</if>
		<if test='searchType!=null and searchString!=null and !"".equals(searchType) and !"".equals(searchString)'>
			and where ${searchType} like '%'||#{searchString}||'%'
		</if>
		and t.idx = #{teamNum}
	</select>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** JSON 검색한 리스트를 불러온다. *** === -->
	<select id="getMindJSONList" parameterType="HashMap" resultType="String">
		<if test="'fk_userid'.equals(searchType)">
			select fk_userid
			from tbl_mind d   join tbl_member m        on d.fk_userid = m.userid
			              join tbl_teamwon w       on m.idx = w.fk_member_idx
			              join tbl_team t          on w.fk_team_idx = t.idx
			where 1=1 and d.status = 1 and m.status =1
			<if test='!"2".equals(status)'>
					and m.userid = #{userid}
			</if>
			and ${searchType} like '%'||#{searchString}||'%'  and t.idx = #{teamNum}
		</if>
		<if test="'subject'.equals(searchType)">
			select subject
			from tbl_mind d   join tbl_member m        on d.fk_userid = m.userid
			              join tbl_teamwon w       on m.idx = w.fk_member_idx
			              join tbl_team t          on w.fk_team_idx = t.idx
			where 1=1 and d.status = 1 and m.status =1
			<if test='!"2".equals(status)'>
					and m.userid = #{userid}
			</if>
			and ${searchType} like '%'||#{searchString}||'%' and t.idx = #{teamNum}
		</if>
	</select>
<!-- ============================================================================================================================================================= -->	
	<select id="getMindIdxTeam" parameterType="HashMap" resultMap="idxMindTeam">
		select W.Fk_Team_Idx as team_idx, m.userid as userid, m.img, d.subject, d.content ,w.status
		from tbl_mind d join tbl_member m on d.fk_userid = M.Userid 
						left join tbl_teamwon w on w.fk_member_idx = M.Idx
		where d.idx = #{didx} and w.fk_team_idx = #{teamidx}
	</select>
	<resultMap id="idxMindTeam" type="HashMap">
 		<result property="team_idx" 			column="team_idx"		javaType="String"></result>
 		<result property="userid" 				column="userid" 		javaType="String"></result>
 		<result property="img" 					column="img" 			javaType="String"></result>
 		<result property="subject" 				column="subject" 		javaType="String"></result>
 		<result property="content" 				column="content" 		javaType="String"></result>
 		<result property="status" 				column="status" 		javaType="String"></result>
 	</resultMap>
<!-- ============================================================================================================================================================= -->	
	<insert id="setMindWrite" parameterType="HashMap">
		insert into tbl_mind 
		<if test='nidx!=null and !"".equals(nidx)'>
			values(seq_mind.nextval,#{userid}, #{subject}, default, #{depth}, #{nidx}, #{nidx},default, default, default, #{chkid}, #{content})
		</if>
		<if test='nidx==null or "".equals(nidx)'>
			values(seq_mind.nextval,#{userid}, #{subject}, default, default, seq_mind.nextval,default, default, default, default, #{userid}, #{content})
		</if>
	</insert>
	<!-- FK_USERID, IDX, SUBJECT, REGDAY, DEPTH, GROUPNO, REF_IDX, READCOUNT, STATUS, CHECKNUM, CHKID, CONTENT -->
<!-- ============================================================================================================================================================= -->	
	<select id="getMindDepth" parameterType="String" resultMap="mindDepth">
		 	select depth, groupno
  			from tbl_mind
  			where idx = #{nidx}
	</select>
	<resultMap id="mindDepth" type="HashMap">
 		<result property="depth" 			column="depth"			javaType="String"></result>
 		<result property="groupno" 			column="groupno" 		javaType="String"></result>
 	</resultMap>
<!-- ============================================================================================================================================================= -->	
	<update id="updateMindReadCount" parameterType="String">
		update tbl_mind set readCount = readCount + 1
		where idx = #{idx}
	</update>
<!-- ============================================================================================================================================================= -->	
	<update id="updateMindCheckNum" parameterType="String">
		update tbl_mind set checkNum = checkNum + 1
		where idx = #{idx}
	</update>
<!-- ============================================================================================================================================================= -->	
	<!-- <update id="delMindIdx" parameterType="java.util.HashMap">
            update tbl_mind set status = 0
        	where groupno = (select groupno from tbl_mind where idx in
        	<foreach collection="idxArr" index="i" open="(" separator="," close=")" >
        		${idxArr[i]}
        	</foreach>
        	) and ref_idx >= (select ref_idx from tbl_mind where idx in
        	<foreach collection="idxArr" index="i" open="(" separator="," close=")" >
        		${idxArr[i]}
        	</foreach>
        	)
	</update> -->
<!-- ============================================================================================================================================================= -->	
	<update id="delMindIdx" parameterType="String">
            update tbl_mind set status = 0
        	where groupno = (select groupno from tbl_mind where idx =
        		#{idxArr}
        	) and ref_idx >= (select ref_idx from tbl_mind where idx =
        		#{idxArr}
        	)
	</update>
<!-- ============================================================================================================================================================= -->	
	
	
	
	
<!-- === *** 구글맵  *** === -->	
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 구글맵 전체 정보를 가져온다. *** === -->
	<select id="getMap" resultType="com.miracle.pjs.model.MapVO">
		  select m.*
          from tbl_map m join tbl_teamwon w on m.team_idx = w.fk_team_idx
          where m.team_idx = #{team_idx}
	</select>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 구글맵에서 검색한 정보를 가져온다. *** === -->
	<select id="getMapWithSearch" parameterType="HashMap" resultType="com.miracle.pjs.model.MapVO">
		select *
		from tbl_map
		<if test='"-1".equals(choice)'>
			where team_idx is null and name like '%'||#{searchString}||'%'
		</if>
		<if test='"1".equals(choice)'>
			where team_idx is not null and name like '%'||#{searchString}||'%'
		</if>
		<if test='"0".equals(choice)'>
			where name like '%'||#{searchString}||'%'
		</if>
	</select>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 구글맵에서 JSON검색 *** === -->
	<select id="getSearchJSON" parameterType="HashMap" resultType="String">
		select name
		from tbl_map
		<choose>
			<when test='"-1".equals(choice)'>
				where team_idx is null and name like '%'||#{searchString}||'%'
			</when>
			<when test='"1".equals(choice)'>
				where team_idx is not null and name like '%'||#{searchString}||'%'
			</when>
			<when test='"0".equals(choice) or "".equals(choice) or choice==null' >
				where name like '%'||#{searchString}||'%'
			</when>
			<when test='"".equals(searchString)'>
				where 1=2
			</when>
		</choose>
	</select>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 구글맵 전체 정보를 가져온다. *** === -->
	<select id="getMapFood" parameterType="String" resultMap="googlemapfood">
		select f.subject, f.contents, f.img
		from tbl_map m join tbl_map_food f on m.idx = f.fk_idx
		where m.idx = #{map_idx}
	</select>
	<resultMap id="googlemapfood" type="HashMap">
 		<result property="subject" 		column="subject" 		javaType="String"></result>
 		<result property="contents" 	column="contents" 		javaType="String"></result>
 		<result property="img" 			column="img" 			javaType="String"></result>
 	</resultMap>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 구글맵 전체 정보를 가져온다. *** === -->
	<select id="getMapTeam" parameterType="String" resultMap="googlemapteam">
		select   m.idx as memberidx, m.userid,  m.name as memberName, m.img , w.status
		from tbl_map p  join tbl_team t on p.team_idx = t.idx
                        join tbl_teamwon w on w.fk_team_idx = T.Idx
                        join tbl_member m on W.Fk_Member_Idx = m.idx
		where p.idx =#{map_idx}
	</select>
	<resultMap id="googlemapteam" type="HashMap">
 		<result property="memberidx" 		column="memberidx" 		javaType="String"></result>
 		<result property="userid" 			column="userid" 		javaType="String"></result>
 		<result property="memberName" 		column="memberName" 	javaType="String"></result>
 		<result property="img" 				column="img" 			javaType="String"></result>
 		<result property="status" 			column="status" 		javaType="String"></result>
 	</resultMap>
<!-- ============================================================================================================================================================= -->	
	
	
	
<!-- === *** 쪽지*** === -->
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 보낸이의 쪽지 수를 반환 *** === -->
	<select id="getSenderMemo" parameterType="HashMap" resultType="int">
		select count(*)
	    from tbl_memomemory y join tbl_member m on m.userid = Y.Sender
	                          join tbl_teamwon w on W.Fk_Member_Idx = M.Idx
	    where y.sender=#{userid} and w.fk_team_idx = #{teamNum}
	</select>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 보낸 쪽지 리스트를 반환한다. *** === -->
	<select id="getSenderMemoList" parameterType="HashMap" resultMap="senderList">
		select *
		from
		(
		  select rownum as rno, v.*
		  from
		   ( 
		    select y.*, m.name, w.fk_team_idx as teamNum, m.img
		    from tbl_memomemory y join tbl_member m on m.userid = Y.Sender
		                                                join tbl_teamwon w on W.Fk_Member_Idx = M.Idx
		    where y.sender=#{userid} and  w.fk_team_idx = #{teamNum} and  m.status = 1 and Y.Sstatus=1
		    order by y.idx desc
		    ) v
		) t
		where rno between #{sNum} and #{eNum}
	</select>
	<!--  RNO, IDX, SUBJECT, CONTENT, SENDER, SSTATUS, NAME, TEAMNUM, IMG, writedate -->
	<resultMap id="senderList" type="HashMap">
 		<result property="idx" 				column="idx" 			javaType="String"></result>
 		<result property="subject" 			column="subject" 		javaType="String"></result>
 		<result property="content" 			column="content" 		javaType="String"></result>
 		<result property="sender" 			column="sender" 		javaType="String"></result>
 		<result property="sstatus" 			column="sstatus" 		javaType="String"></result>
 		<result property="name" 			column="name" 			javaType="String"></result>
 		<result property="teamnum" 			column="teamnum" 		javaType="String"></result>
 		<result property="img" 				column="img" 			javaType="String"></result>
 		<result property="writedate" 		column="writedate" 		javaType="String"></result>
 	</resultMap>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 받은이의 쪽지 수를 반환 *** === -->
	<select id="getReceiverMemo" parameterType="HashMap" resultType="int">
       select count(*)
	    from tbl_memoreceiver r join Tbl_Memomemory y on y.idx = r.fk_idx 
                           		join  tbl_member m on m.userid = Y.Sender
	                          	join tbl_teamwon w on W.Fk_Member_Idx = M.Idx
	    where r.receiver=#{userid} and w.fk_team_idx = #{teamNum}
	</select>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 받은 쪽지 리스트를 반환한다. *** === -->
	<select id="getReceiverMemoList" parameterType="HashMap" resultMap="receiverList">
		select *
		from
		(
			select rownum as rno, v.*
			from
			( 
				select r.*, y.subject, y.content, y.sender, y.writedate, m.name, m.img
				from tbl_memoreceiver r join tbl_memomemory y on r.fk_idx = y.idx
				                        join tbl_member m on m.userid = y.sender
				                        join tbl_teamwon w on W.Fk_Member_Idx = M.Idx
				where r.receiver= #{userid} and  w.fk_team_idx = #{teamNum} and  m.status = 1 and r.rstatus = 1                                       
				order by r.idx desc
		   	) v
		) t
		where rno between #{sNum} and #{eNum}
	</select>
	<!--  idx, receiver, rreadcount, readdate, subject, content , sender, writedate, name, img -->
	<resultMap id="receiverList" type="HashMap">
 		<result property="idx" 				column="idx" 			javaType="String"></result>
 		<result property="subject" 			column="subject" 		javaType="String"></result>
 		<result property="content" 			column="content" 		javaType="String"></result>
 		<result property="sender" 			column="sender" 		javaType="String"></result>
 		<result property="sstatus" 			column="sstatus" 		javaType="String"></result>
 		<result property="name" 			column="name" 			javaType="String"></result>
 		<result property="img" 				column="img" 			javaType="String"></result>
 		<result property="readdate" 		column="readdate" 		javaType="String"></result>
 		<result property="receiver" 		column="receiver" 		javaType="String"></result>
 		<result property="rreadcount" 		column="rreadcount" 	javaType="String"></result>
 	</resultMap>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 보낸 쪽지의 뷰를 보여준다. *** === -->
	<select id="getSenderIdx" parameterType="HashMap" resultMap="senderIdx">
		 	select y.IDX, y.SUBJECT, y.CONTENT, y.SENDER, y.SSTATUS, m.IMG, w.status
		  	from tbl_memomemory y join tbl_member m on m.userid = y.sender
							  join tbl_teamwon w on w.fk_member_idx = m.idx
      		where y.idx = #{idx} and w.fk_team_idx = #{teamNum} and y.sstatus = 1 and m.status = 1
	</select>
	<!--  IDX, SUBJECT, CONTENT, SENDER, SSTATUS, WRITEDATE, IDX_1, USERID, PWD, NAME, IMG, STATUS, IDX_2, FK_TEAM_IDX, FK_MEMBER_IDX, STATUS_1, REGDATE, DISDATE -->
	<resultMap id="senderIdx" type="HashMap">
 		<result property="idx" 				column="idx" 			javaType="String"></result>
 		<result property="subject" 			column="subject" 		javaType="String"></result>
 		<result property="content" 			column="content" 		javaType="String"></result>
 		<result property="sender" 			column="sender" 		javaType="String"></result>
 		<result property="sstatus" 			column="sstatus" 		javaType="String"></result>
 		<result property="img" 				column="img" 			javaType="String"></result>
 		<result property="status" 			column="status" 		javaType="String"></result>
 	</resultMap>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 받은 쪽지의 뷰를 보여준다. *** === -->
	<select id="getReceiverIdx" parameterType="HashMap" resultMap="receiverIdx">
		 	select r.idx, y.sender, r.rstatus, r.rreadcount, y.subject, y.content, y.sstatus, m.img, w.status, r.receiver
		  	from tbl_memoreceiver r join tbl_memomemory y on r.fk_idx = y.idx
                                    join tbl_member m on m.userid = y.sender
                                    join tbl_teamwon w on w.fk_member_idx = m.idx
        	where r.idx = #{idx} and w.fk_team_idx = #{teamNum} 
	</select>
	<!--  r.idx, y.sender, r.rstatus, r.rreadcount, y.subject, y.content, y.sstatus, m.img  -->
	<resultMap id="receiverIdx" type="HashMap">
 		<result property="idx" 				column="idx" 			javaType="String"></result>
 		<result property="subject" 			column="subject" 		javaType="String"></result>
 		<result property="content" 			column="content" 		javaType="String"></result>
 		<result property="sender" 			column="sender" 		javaType="String"></result>
 		<result property="sstatus" 			column="sstatus" 		javaType="String"></result>
 		<result property="img" 				column="img" 			javaType="String"></result>
 		<result property="rstatus" 			column="rstatus" 		javaType="String"></result>
 		<result property="rreadcount" 		column="rreadcount" 	javaType="String"></result>
 		<result property="status" 			column="status" 		javaType="String"></result>
 		<result property="receiver" 		column="receiver" 		javaType="String"></result>
 	</resultMap>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 보낸 쪽지의 이름 리스트를 반환한다. *** === -->
	<select id="getReceiverNames" parameterType="HashMap" resultType="String">
		select m.name
	    from tbl_memomemory y join tbl_memoreceiver r on r.fk_idx = y.idx
                                                   join tbl_member m on m.userid = r.receiver
	                                                join tbl_teamwon w on W.Fk_Member_Idx = M.Idx
	    where y.sender=#{userid} and  w.fk_team_idx = #{teamNum} and  m.status = 1 and Y.Sstatus=1 and y.idx=#{idx}
	    order by y.idx desc
	</select>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 해당 idx의 보낸 쪽지를 삭제한다. *** === -->
	<update id="delSenderMemo" parameterType="HashMap">
		<if test="idxArr != null">
            update tbl_memomemory set sstatus = 0
        	where idx in
        	<foreach collection="idxArr" index="i" open="(" separator="," close=")" >
        		${idxArr[i]}
        	</foreach>
        </if>
	</update>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 해당 idx의 받은 쪽지를 삭제한다. *** === -->
	<update id="delReceiverMemo" parameterType="HashMap">
		<if test="idxArr != null">
            update tbl_memoreceiver set rstatus = 0
        	where idx in
        	<foreach collection="idxArr" index="i" open="(" separator="," close=")" >
        		${idxArr[i]}
        	</foreach>
        </if>
	</update>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 쪽지를 받은 사람이 읽었는지 않 읽었는지 update *** === -->
	<update id="updateRreadCount" parameterType="String">
		update tbl_memoreceiver set RreadCount = 1,
									readdate = sysdate
		where idx = #{idx}
	</update>
<!-- ============================================================================================================================================================= -->	
	<!-- === ***  *** === -->
	<select id="getTeam" parameterType="String" resultMap="getTeam">
		select m.idx, m.name, fk_team_idx as teamNum , m.userid
        from tbl_member m join tbl_teamwon w on m.idx=w.fk_member_idx
        where w.fk_team_idx = #{teamNum}
	</select>
	<resultMap id="getTeam" type="HashMap">
		<result property="idx" 					column="idx" 			javaType="String"></result>
		<result property="userid" 				column="userid" 		javaType="String"></result>
 		<result property="name" 				column="name" 			javaType="String"></result>
 		<result property="teamNum" 				column="teamNum" 		javaType="String"></result>
 	</resultMap>	
<!-- ============================================================================================================================================================= -->	
	<!-- === ***  *** === -->
	<!-- <select id="getAllMember" resultMap="getAllMember">
		select m.name, fk_team_idx as teamNum  
        from tbl_member m join tbl_teamwon w on m.idx=w.fk_member_idx
	</select>
	<resultMap id="getAllMember" type="HashMap">
 		<result property="name" 				column="name" 			javaType="String"></result>
 		<result property="teamNum" 				column="teamNum" 		javaType="String"></result>
 	</resultMap> -->
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 쪽지를 받은 사람이 읽었는지 않 읽었는지 update *** === -->
	<select id="getMessage" parameterType="HashMap" resultType="String">
		 select count(*)
   		 from tbl_memoreceiver r join tbl_member m on r.receiver = m.userid
                                 join tbl_teamwon w on m.idx = w.fk_member_idx
    	 where rreadCount = 0 and m.userid = #{userid} and w.fk_team_idx=#{idx} and rstatus=1
	</select>
<!-- ============================================================================================================================================================= -->	

	<!-- === *** 쪽지를 받은 사람이 읽었는지 않 읽었는지 update *** === -->
	<select id="checkReadCount" parameterType="String" resultType="int">
		select rreadCount
        from tbl_memoreceiver
        where idx = #{idx}
	</select>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 쪽지를 받은 사람이 읽었는지 않 읽었는지 update *** === -->
	<insert id="insertsender" parameterType="HashMap" >
		insert into tbl_memomemory
		values(seq_memomemory.nextval, #{subject}, #{writeuserid}, default, default , #{content})
	</insert>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 쪽지를 받은 사람이 읽었는지 않 읽었는지 update *** === -->
	<select id="getSenderLastIdx" parameterType="HashMap" resultType="String">
		 select max(idx) from tbl_memomemory where sender = #{writeuserid}
	</select>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 쪽지를 받은 사람이 읽었는지 않 읽었는지 update *** === -->
	<insert id="insertreceiver" parameterType="HashMap" >
		insert into tbl_memoreceiver
		values(seq_memoreceiver.nextval, #{userid}, default, default, #{idx}, null)
	</insert>
<!-- ============================================================================================================================================================= -->	
	
	
	
	
	

	<!-- === *** 로그인한 유저의 팀정보를 가져오는 메소드 *** === -->
	<select id="getUserTeam" parameterType="HashMap" resultMap="userTeam">
		select t.idx as teamNum, m.userid, m.idx as memberNum, w.status, m.img, m.name
		from tbl_member m join tbl_teamwon w on m.idx = w.fk_member_idx
		                  join tbl_team t on w.fk_team_idx = t.idx
		where m.userid = #{userid} and t.idx = #{teamidx}
	</select>
	<resultMap id="userTeam" type="HashMap">
 		<result property="teamNum" 			column="teamNum"		javaType="String"></result>
 		<result property="userid" 			column="userid" 		javaType="String"></result>
 		<result property="memberNum" 		column="memberNum" 		javaType="String"></result>
 		<result property="status" 			column="status" 		javaType="String"></result>
 		<result property="img" 				column="img" 			javaType="String"></result>
 		<result property="name" 			column="name" 			javaType="String"></result>
 	</resultMap>
<!-- ============================================================================================================================================================= -->	
	<!-- === *** 쪽지를 받은 사람이 읽었는지 않 읽었는지 update *** === -->
	<insert id="setNoticeWriteWithFile" parameterType="HashMap" >
		insert into tbl_noticefile
		values(seq_noticefile.nextval, #{newfilename}, #{originalfilename}, #{filesize}, #{idx})
	</insert>
<!-- ============================================================================================================================================================= -->	
<!-- === ***  *** === -->
	<select id="getfilenamelist" parameterType="HashMap" resultType="String">
		  select count(*)
          from tbl_notice n join tbl_noticefile f on n.idx = f.idx
          where f.fk_idx= #{idx}
	</select>
<!-- =========================================================================================================================================================== -->	
	<select id="getViewWithNoAddCount" parameterType="HashMap" resultType="com.miracle.pjs.model.FileVO">
		select *
		from tbl_noticefile
		where idx = #{fidx}
	</select>
<!-- ============================================================================================================================================================= -->	
	 <select id="getmemoReadCount" parameterType="String" resultType="String">
		 select count(*)
         from tbl_memomemory m join tbl_memoreceiver r on m.idx = r.fk_idx
         where r.fk_idx = #{string} and r.rreadcount = 0
	</select>
		
<!-- ============================================================================================================================================================= -->	
    <update id="setUpdateWrite" parameterType="HashMap">
		 update tbl_notice set subject = #{subject},
		 					   content = #{content}
		 where idx = #{idx}					   
	</update>
		
<!-- ============================================================================================================================================================= -->	
       
       
    <!-- === *** 쪽지를 받은 사람이 읽었는지 않 읽었는지 update *** === -->
	<insert id="setMindWriteWithFile" parameterType="HashMap" >
		insert into tbl_mindfile
		values(seq_mindfile.nextval, #{newfilename}, #{originalfilename}, #{filesize}, #{idx})
	</insert>
<!-- ============================================================================================================================================================= -->	
    <!-- === *** 쪽지를 받은 사람이 읽었는지 않 읽었는지 update *** === -->
	<update id="setMindViewEdit" parameterType="HashMap" >
		update tbl_mind set subject = #{subject},
						    content = #{content}
		where idx = #{idx}				    
	</update>
<!-- ============================================================================================================================================================= -->	
    <!-- 파일이 있는 지 없는지 -->
	<select id="getMindfilenamelist" parameterType="HashMap" resultType="String">
		  select count(*)
          from tbl_mind m join tbl_mindfile f on m.idx = f.idx
          where f.fk_idx= #{idx}
	</select>
<!-- ============================================================================================================================================================= -->	
     <!-- 파일 가져오기 -->
	<select id="getMindfilename" parameterType="String" resultType="com.miracle.pjs.model.MindFileVO">
		    select *
    		from tbl_mind m join tbl_mindfile f on m.idx = f.fk_idx
    		where f.fk_idx = #{idx}
	</select>
<!-- ============================================================================================================================================================= -->	
    <!-- 파일넣은 리스트 가져오기 -->
	<select id="getMindWrite" parameterType="HashMap" resultType="String">
		    select max(idx)
    		from tbl_mind
    		where fk_userid = #{userid} and subject=#{subject}
	</select>
<!-- ============================================================================================================================================================= -->	
     <select id="getmindViewWithNoAddCount" parameterType="HashMap" resultType="com.miracle.pjs.model.FileVO">
		select *
		from tbl_mindfile
		where fk_idx = #{fidx}
	</select>
<!-- ============================================================================================================================================================= -->	
     
          
</mapper>