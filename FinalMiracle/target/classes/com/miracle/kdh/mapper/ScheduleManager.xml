<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #7. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #8. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->              
<mapper namespace="do">
	<!-- 모든 요소를 가져오는 메소드 -->
	<select id="getAllDoList" resultType="com.miracle.kdh.model.FolderVO">
		select idx, fk_teamwon_idx, subject, content
		     , to_char(startdate, 'yyyy-mm-dd') as startdate
		     , to_char(lastdate, 'yyyy-mm-dd') as lastdate
		     , fk_folder_idx, groupno, depth, category, status, importance
		     , case when trunc(startdate) <![CDATA[<]]> sysdate and sysdate <![CDATA[<]]> trunc(lastdate)+1 then 1
		            when trunc(lastdate)+1 <![CDATA[<]]> sysdate then -1
		            else 0 end as dayCnt
		     , (select count(*) from tbl_folder
		       where status in (1, 0) and idx != F.idx
		       start with idx = F.idx
		       connect by prior idx = fk_folder_idx) as downCnt
		from tbl_folder F
		where status in (0, 1) and fk_teamwon_idx in (select idx from tbl_teamwon where fk_team_idx = #{team_idx})
		start with fk_folder_idx = 0
		connect by prior idx = fk_folder_idx
		order siblings by category asc
	</select>
	
	
	<!-- 방금 추가한 요소를 가져오기 -->
	<select id="getAddedElement" resultType="com.miracle.kdh.model.FolderVO">
		select idx, fk_teamwon_idx, subject, content
		     , to_char(startdate, 'yyyy-mm-dd') as startdate
		     , to_char(lastdate, 'yyyy-mm-dd') as lastdate
		     , fk_folder_idx, groupno, depth, category, status, importance
		     , case when trunc(startdate) &lt; sysdate and sysdate &lt; trunc(lastdate)+1 then 1
		            when trunc(lastdate)+1 &lt; sysdate then -1
		            else 0 end as dayCnt
		     , (select count(*) from tbl_folder
		       where status in (1, 0) and idx != F.idx
		       start with idx = F.idx
		       connect by prior idx = fk_folder_idx) as downCnt
		from tbl_folder F
		where idx = (select max(idx) from tbl_folder)
	</select>
	
	
	<!-- 선택한 폴더의 정보를 가져오는 메소드 -->
	<select id="getFolderInfo" resultType="com.miracle.kdh.model.FolderVO">
		select idx, fk_teamwon_idx, subject, content
		     , to_char(startdate, 'yyyy-mm-dd') as startdate
		     , to_char(lastdate, 'yyyy-mm-dd') as lastdate
		     , fk_folder_idx, groupno, depth, category, status, importance
		     , case when trunc(startdate) &lt; sysdate and sysdate &lt; trunc(lastdate)+1 then 1
		            when trunc(lastdate)+1 &lt; sysdate then -1
		            else 0 end as dayCnt
		     , (select avg(importance) from tbl_folder where idx != F.idx start with idx = F.idx connect by prior idx = fk_folder_idx) as importanceAvg
		from tbl_folder F
		where idx = #{idx}
	</select>
	
	
	<!-- 선택한 폴더에 소속된 팀원 리스트를 가져오는 메소드 -->
	<select id="getFolder_teamwonInfo" resultType="com.miracle.kdh.model.Folder_TeamwonVO">
		select idx, fk_folder_idx, fk_teamwon_idx, acceptability, status
		     , (select userid from view_teamwonWithUserid where idx = fk_teamwon_idx) as userid
		     , getProceedingTaskCnt(fk_teamwon_idx,#{idx}) as proceedingTaskCnt
     		 , getCompleteTaskCnt(fk_teamwon_idx,#{idx}) as completeTaskCnt
		from tbl_folder_teamwon
		where fk_folder_idx = #{idx}
	</select>
	
	
	<!-- 선택한 폴더에 작성된 댓글 리스트를 가져오는 메소드 -->
	<select id="getFolder_commentInfo" resultType="com.miracle.kdh.model.Folder_CommentVO">
		select idx, fk_folder_idx, fk_teamwon_idx, content, status, to_char(writeDate, 'yyyy-mm-dd') as writeDate
		     , (select userid from view_teamwonWithUserid where idx = fk_teamwon_idx) as userid
		from tbl_folder_comment
		where idx = #{idx} and status = 1
		order by 1
	</select>
	
	
	<!-- 선택한 폴더의 정보를 수정하기 -->
	<update id="goModalEdit" parameterType="com.miracle.kdh.model.FolderVO">
		update tbl_folder set subject=#{subject}, content=#{content}, startDate=to_date(#{startDate}), lastDate=to_date(#{lastDate}), importance=#{importance}
		where idx = #{idx}
	</update>
	
	
	<!-- 할일 완료, 미완료 처리하기 -->
	<update id="setTaskComplete" parameterType="com.miracle.kdh.model.FolderVO">
		update tbl_folder set status = #{status}
		where idx = #{idx}
	</update>
	
	
	<!-- 하위 폴더 추가할때 상위 폴더의 정보 받아오기 -->
	<resultMap type="HashMap" id="getUpFolder">
		<result property="groupNo" column="groupNo" javaType="String"/>
		<result property="depth" column="depth" javaType="String"/>
		<result property="subject" column="subject" javaType="String"/>
	</resultMap>
	<select id="getUpFolder" resultMap="getUpFolder">
		select groupNo, depth, subject
		from tbl_folder F
		where idx = #{upIdx}
	</select>
	
	
	<!-- 현재 팀의 소속된 팀원 목록을 가져오기 -->
	<resultMap type="HashMap" id="getTeamwonList">
		<result property="userid" column="userid" javaType="String"/>
		<result property="idx" column="idx" javaType="String"/>
	</resultMap>
	<select id="getTeamwonList" resultMap="getTeamwonList">
		select userid, idx
		from view_teamwonwithuserid
		where fk_team_idx = #{team_idx}
	</select>
	
	
	<!-- 하위 폴더 추가하기 -->
	<insert id="addDownElement" parameterType="com.miracle.kdh.model.FolderVO">
		insert into tbl_folder(idx, fk_teamwon_idx, subject, content, startdate, lastdate, fk_folder_idx, groupNo, depth, category, status, importance)
		values(seq_folder.nextval, #{fk_teamwon_idx}, #{subject}, #{content}, #{startDate}, #{lastDate}, #{fk_folder_idx}, #{groupNo}, #{depth}, #{category}, 1, #{importance})
	</insert>
	
	
	<!-- 폴더나 할일 추가할때 담당 팀원 추가하기(가장 최근에 올라온 folderIdx를 구해서 입력주는 방식임) -->
	<insert id="addDoTeamwon" parameterType="HashMap">
		insert into tbl_folder_teamwon(idx, fk_folder_idx, fk_teamwon_idx, acceptability, status)
		select seq_folder_teamwon.nextval, V.*
		from (
			<foreach collection="teamwonIdxArr" index="i" separator="UNION ALL">
				<if test="teamwon_idx == teamwonIdxArr[i]"> <!-- 폴더 만든사람하고 같다면 -->
					select (select max(idx) from tbl_folder), ${teamwonIdxArr[i]}, 0, 2
					from dual
				</if>
				<if test="teamwon_idx != teamwonIdxArr[i]"> <!-- 폴더 만든사람하고 틀리다면 -->
					select (select max(idx) from tbl_folder), ${teamwonIdxArr[i]}, 0, 1
					from dual
				</if>
			</foreach>
		)V
	</insert>
	
	
	<!-- 선택한 요소와 그 하위요소들 삭제하기 -->
	<update id="delElement">
		update tbl_folder set status = -1
		where idx in (select idx
		              from tbl_folder
		              start with idx = #{idx}
		              connect by prior idx = fk_folder_idx)
	</update>
	
	
	<!-- 페이징 처리를 위해 1주간의 날짜를 동적으로 받아오기(뷰단에서 너무 노가다라 다른걸로 대체함;) -->
	<!-- <resultMap type="HashMap" id="getPageDate">
		<result property="threeago" column="threeago" javaType="String"/>
		<result property="threeagoDP" column="threeagoDP" javaType="String"/>
		<result property="twoago" column="twoago" javaType="String"/>
		<result property="twoagoDP" column="twoagoDP" javaType="String"/>
		<result property="oneago" column="oneago" javaType="String"/>
		<result property="oneagoDP" column="oneagoDP" javaType="String"/>
		<result property="standard" column="standard" javaType="String"/>
		<result property="standardDP" column="standardDP" javaType="String"/>
		<result property="onelater" column="onelater" javaType="String"/>
		<result property="onelaterDP" column="onelaterDP" javaType="String"/>
		<result property="twolater" column="twolater" javaType="String"/>
		<result property="twolaterDP" column="twolaterDP" javaType="String"/>
		<result property="threelater" column="threelater" javaType="String"/>
		<result property="threelaterDP" column="threelaterDP" javaType="String"/>
	</resultMap>
	<select id="getPageDate" resultMap="getPageDate">
		select to_char(v.standarddate-3, 'yyyymmdd') as threeago
		     , to_char(v.standarddate-3, 'mm/dd(dy)') as threeagoDP
		     , to_char(v.standarddate-2, 'yyyymmdd') as twoago
		     , to_char(v.standarddate-2, 'mm/dd(dy)') as twoagoDP
		     , to_char(v.standarddate-1, 'yyyymmdd') as oneago
		     , to_char(v.standarddate-1, 'mm/dd(dy)') as oneagoDP
		     , to_char(v.standarddate, 'yyyymmdd') as standard
		     , to_char(v.standarddate, 'mm/dd(dy)') as standardDP
		     , to_char(v.standarddate+1, 'yyyymmdd') as onelater
		     , to_char(v.standarddate+1, 'mm/dd(dy)') as onelaterDP
		     , to_char(v.standarddate+2, 'yyyymmdd') as twolater
		     , to_char(v.standarddate+2, 'mm/dd(dy)') as twolaterDP
		     , to_char(v.standarddate+3, 'yyyymmdd') as threelater
		     , to_char(v.standarddate+3, 'mm/dd(dy)') as threelaterDP
		from (
		  select (sysdate+#{page}) as standarddate
		  from dual
		)V
	</select> -->
	
	<!-- 페이징 처리를 위해 1주간의 날짜를 동적으로 수정하기 -->
	<update id="updatePageDateWeek">
		update tbl_doPaging_week set day = to_char(sysdate + modification + #{page}, 'yyyymmdd')
	                               , dayDP = to_char(sysdate + modification + #{page}, 'mm/dd(dy)')
	                               , dotw = to_char(sysdate + modification + #{page}, 'dy')
    </update>
    
    <!-- 페이징 처리를 위해 수정된 1주간의 날짜를 받아오기 -->
    <resultMap type="HashMap" id="getPageDateWeek">
    	<result property="day" column="day" javaType="String" />
    	<result property="dayDP" column="dayDP" javaType="String" />
    	<result property="dotw" column="dotw" javaType="String" />
    </resultMap>
    <select id="getPageDateWeek" resultMap="getPageDateWeek">
		select day, dayDP, dotw
		from tbl_doPaging_week
	</select>
	
	<!-- 페이징 처리를 위해 한달간의 날짜를 동적으로 수정하기 -->
	<update id="updatePageDateMonth">
		update tbl_doPaging_month set day = to_char(sysdate + modification + #{page}, 'yyyymmdd')
	                                , dayDP = to_char(sysdate + modification + #{page}, 'dd')
	                                , dotw = to_char(sysdate + modification + #{page}, 'dy')
    </update>
    
    <!-- 페이징 처리를 위해 수정된 한달간의 날짜를 받아오기 -->
    <resultMap type="HashMap" id="getPageDateMonth">
    	<result property="day" column="day" javaType="String" />
    	<result property="dayDP" column="dayDP" javaType="String" />
    	<result property="dotw" column="dotw" javaType="String" />
    </resultMap>
    <select id="getPageDateMonth" resultMap="getPageDateMonth">
		select day, dayDP, dotw
		from tbl_doPaging_month
	</select>
	
	<!-- 삭제 등 하위요소의 값이 변할때 상위요소의 하위요소 갯수를 다시 받아오기 -->
	<select id="getDownCnt" resultType="int">
		select count(*) as downCnt
		from tbl_folder
		where status in (1, 0) and idx != #{fk_folder_idx}
		start with idx = #{fk_folder_idx}
		connect by prior idx = fk_folder_idx
	</select>
</mapper>
















